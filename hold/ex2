#include "main.h"

/**
 * path_finder - finds if a command is located on PATH
 * @cmd: command entered on stdin
 *
 * Return: nothing
 */

void path_finder(char **cmd)
{
	char *path, *token, *token_cmd;
	struct stat buff;
	int j;

	path = _getenv("PATH");
	token = strtok(path, ":");

	while (!token)
	{
		token_cmd = build(*cmd,token);
		j = stat(token_cmd, &buff);
		printf("%d\n", j);
		if (j == -1)
		{
			free(token_cmd);
			token = strtok(NULL, ":");
			continue;
		}
		else
		{
			*cmd = token_cmd;
			free(token_cmd);
			free(path);
			return;

		}
	}
	free(path);
}
/**
 * build - Build Command
 * @token: Excutable Command
 * @value: Dirctory Conatining Command
 *
 * Return: Parsed Full Path Of Command Or NULL Case Failed
 */
char *build(char *token, char *value)
{
	char *cmd;
	size_t len;

	len = _strlen(value) + _strlen(token) + 2;
	cmd = malloc(sizeof(char) * len);
	if (cmd == NULL)
	{
		return (NULL);
	}

	memset(cmd, 0, len);

	cmd = _strcat(cmd, value);
	cmd = _strcat(cmd, "/");
	cmd = _strcat(cmd, token);

	return (cmd);
}
